generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String     @id @default(uuid())
  walletAddress    String     @unique
  email            String     @unique
  role             UserRole
  firstName        String?
  lastName         String?
  dateOfBirth      DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  organizationName String?
  ownedDocuments   Document[] @relation("OwnedDocuments")
  issuer           Issuer?
  verifier         Verifier?
}

model Issuer {
  id               String            @id @default(uuid())
  userId           String            @unique
  organizationName String
  organizationType OrganizationType?
  licenseNumber    String?           @unique
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  issuedDocuments  Document[]
  user             User              @relation(fields: [userId], references: [id])
}

model Verifier {
  id               String        @id @default(uuid())
  userId           String        @unique
  organizationName String
  organizationType VerifierType?
  licenseNumber    String?       @unique
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  Document         Document[]
  user             User          @relation(fields: [userId], references: [id])
}

model Document {
  id             String        @id @default(uuid())
  type           DocumentType?
  issuedAt       DateTime?     @default(now())
  blockchainHash String?       @unique
  issuerId       String?
  ownerId        String?
  updatedAt      DateTime?     @updatedAt
  description    String?
  name           String?
  verifierId     String?
  isVerified     Boolean?
  issuer         Issuer?       @relation(fields: [issuerId], references: [id])
  owner          User?         @relation("OwnedDocuments", fields: [ownerId], references: [id])
  verifier       Verifier?     @relation(fields: [verifierId], references: [id])
}

enum UserRole {
  INDIVIDUAL
  ISSUING_AUTHORITY
  VERIFYING_AUTHORITY
}

enum OrganizationType {
  SCHOOL
  UNIVERSITY
  GOVERNMENT_AGENCY
  PRIVATE_COMPANY
  OTHER
}

enum VerifierType {
  GOVERNMENT_OFFICE
  BANK
  LEGAL_ENTITY
  EDUCATIONAL_INSTITUTION
  CORPORATE_ENTITY
  OTHER
}

enum DocumentType {
  BIRTH_CERTIFICATE
  ACADEMIC_TRANSCRIPT
  IDENTIFICATION_CARD
  EXPERIENCE_CERTIFICATE
  OTHER
}

enum VerificationStatus {
  PENDING
  VERIFIED
  REJECTED
}
